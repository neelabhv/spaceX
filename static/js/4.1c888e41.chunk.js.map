{"version":3,"sources":["DisplayData.js"],"names":["BASE_URL","BASE_URL_UPDATED","DisplayData","props","useState","apiData","setApiData","launch_success","land_success","launch_year","filters","setFilter","time","updateFilter","type","value","useEffect","axios","get","then","res","data","catch","error","console","log","querystring","stringify","id","class","map","yr","onClick","e","target","flight","src","links","mission_patch_small","alt","mission_name","flight_number","rocket","first_stage","cores"],"mappings":"6PAKIA,EAAW,oDACXC,EAAmB,GACR,SAASC,EAAYC,GAAQ,IAAD,EACXC,mBAAS,IADE,mBAClCC,EADkC,KACzBC,EADyB,OAEZF,mBAAS,CACpCG,eAAgB,KAChBC,aAAc,KACdC,YAAa,OAL0B,mBAElCC,EAFkC,KAEzBC,EAFyB,KAOnCC,EAAO,CACX,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAGIC,EAAe,SAACC,EAAMC,GAEtBL,EAAQI,KAAUC,EACpBJ,EAAU,2BACLD,GADI,kBAENI,EAAO,QAGVH,EAAU,2BACLD,GADI,kBAENI,EAAOC,MA2Cd,OA1BAC,qBAAU,WAERC,IACGC,IAAIlB,GACJmB,MAAK,SAACC,GAELd,EAAWc,EAAIC,SAGhBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IAEHP,qBAAU,WACRf,EAAmBD,EAAW0B,IAAYC,UAAZ,eAA2BjB,IACzDO,IACGC,IAAIjB,GACJkB,MAAK,SAACC,GACLd,EAAWc,EAAIC,SAEhBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,CAACb,IAGA,eAAC,WAAD,WACF,qBAAKkB,GAAG,YAAR,oCACA,sBAAKA,GAAG,UAAR,UAEE,wBAAOA,GAAG,UAAV,UACI,qBAAKA,GAAG,QAAR,qBAEJ,qBAAKC,MAAM,UAAX,yBACE,qBAAKD,GAAG,OAAR,SA/CJhB,EAAKkB,KAAI,SAACC,GAAD,OAGP,aAFE,CAEF,UACEH,GAAG,SACHb,MAAOgB,EACPC,QAAS,SAACC,GAAD,OAAOpB,EAAa,cAAeoB,EAAEC,OAAOnB,QAHvD,SAKGgB,SAwCD,sBAAKH,GAAG,SAAR,UAGE,qBAAKC,MAAM,UAAX,+BACA,sBAAKA,MAAM,MAAX,UACA,wBACED,GAAG,iBACHb,MAAM,OACNiB,QAAS,SAACC,GAAD,OAAOpB,EAAa,iBAAkBoB,EAAEC,OAAOnB,QAH1D,kBAOA,yBACEa,GAAG,iBACHb,MAAM,QACNiB,QAAS,SAACC,GAAD,OAAOpB,EAAa,iBAAkBoB,EAAEC,OAAOnB,QAH1D,kBAKQ,aAIV,sBAAKa,GAAG,OAAR,UACA,qBAAKC,MAAM,UAAX,gCACA,sBAAKA,MAAM,MAAX,UACE,wBACED,GAAG,eACHb,MAAM,OACNiB,QAAS,SAACC,GAAD,OAAOpB,EAAa,eAAgBoB,EAAEC,OAAOnB,QAHxD,kBAOA,wBACEa,GAAG,eACHb,MAAM,QACNiB,QAAS,SAACC,GAAD,OAAOpB,EAAa,eAAgBoB,EAAEC,OAAOnB,QAHxD,4BAUJ,qBAAKa,GAAG,UAAR,SACGvB,EAAQyB,KAAI,SAACK,GAAD,OACX,sBAAKP,GAAG,aAAR,UACI,qBAAKA,GAAG,QAAR,SACF,qBAAKQ,IAAKD,EAAOE,MAAMC,oBAAqBC,IAAI,wCAEhD,sBAAKX,GAAG,oBAAR,UACI,sBAAKA,GAAG,eAAR,UAAwBO,EAAOK,aAA/B,KAA+CL,EAAOM,iBAC1D,sBAAKZ,MAAM,aAAX,iCAA6CM,EAAO5B,eAApD,OACA,sBAAKsB,MAAM,aAAX,2BAAuCM,EAAO1B,eAC9C,sBAAKoB,MAAM,aAAX,kCAA8CM,EAAOO,OAAOC,YAAYC,MAAM,GAAGpC","file":"static/js/4.1c888e41.chunk.js","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport querystring from \"querystring\";\r\nimport \"./displaydata.css\";\r\n\r\nlet BASE_URL = \"https://api.spacexdata.com/v3/launches?limit=100&\";\r\nlet BASE_URL_UPDATED = \"\";\r\nexport default function DisplayData(props) {\r\n  const [apiData, setApiData] = useState([]);\r\n  const [filters, setFilter] = useState({\r\n    launch_success: null,\r\n    land_success: null,\r\n    launch_year: null,\r\n  });\r\n  const time = [\r\n    2006,\r\n    2007,\r\n    2008,\r\n    2009,\r\n    2010,\r\n    2011,\r\n    2012,\r\n    2013,\r\n    2014,\r\n    2015,\r\n    2016,\r\n    2017,\r\n    2018,\r\n    2019,\r\n    2020,\r\n    2021,\r\n  ];\r\n\r\n  const updateFilter = (type, value) => {\r\n    // console.log(\"inside updatefilter \" + type + value);\r\n    if (filters[type] === value) {\r\n      setFilter({\r\n        ...filters,\r\n        [type]: null,\r\n      });\r\n    } else {\r\n      setFilter({\r\n        ...filters,\r\n        [type]: value,\r\n      });\r\n    }\r\n  };\r\n  const renderYear = () =>\r\n    time.map((yr) => (\r\n        // <a href=\"#\" onClick={(e)=>{e.stopPropagation();updateFilter(\"launch_year\", e.target.value)}}>{yr}</a>\r\n        // <Link to=\"#\" onClick={(e)=>updateFilter(\"launch_year\", e.target.value)}></Link>\r\n      <button\r\n        id=\"b_year\"\r\n        value={yr}\r\n        onClick={(e) => updateFilter(\"launch_year\", e.target.value)}\r\n      >\r\n        {yr}\r\n      </button>\r\n    ));\r\n\r\n  useEffect(() => {\r\n    //   console.log(filters);\r\n    axios\r\n      .get(BASE_URL)\r\n      .then((res) => {\r\n        // console.log(res);\r\n        setApiData(res.data);\r\n        // window.history.pushState(null,null,'/homepage');\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    BASE_URL_UPDATED = BASE_URL + querystring.stringify({ ...filters });\r\n    axios\r\n      .get(BASE_URL_UPDATED)\r\n      .then((res) => {\r\n        setApiData(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, [filters]);\r\n\r\n  return (\r\n      <Fragment>\r\n    <div id=\"page-head\">SpaceX Launch Programs</div>\r\n    <div id=\"flights\">\r\n        \r\n      <aside id=\"sidebar\">\r\n          <div id=\"title\">\r\n      Filters</div>\r\n      <div class=\"heading\">Launch Year</div>\r\n        <div id=\"year\">{renderYear()}</div>\r\n        <div id=\"launch\">\r\n            \r\n          \r\n          <div class=\"heading\">Successful Launch</div>\r\n          <div class=\"btn\">\r\n          <button\r\n            id=\"launch_success\"\r\n            value=\"true\"\r\n            onClick={(e) => updateFilter(\"launch_success\", e.target.value)}\r\n          >\r\n            True\r\n          </button>\r\n          <button\r\n            id=\"launch_success\"\r\n            value=\"false\"\r\n            onClick={(e) => updateFilter(\"launch_success\", e.target.value)}\r\n          >\r\n            False{\" \"}\r\n          </button>\r\n          </div>\r\n        </div>\r\n        <div id=\"land\">\r\n        <div class=\"heading\">Successful Landing</div>\r\n        <div class=\"btn\">\r\n          <button\r\n            id=\"land_success\"\r\n            value=\"true\"\r\n            onClick={(e) => updateFilter(\"land_success\", e.target.value)}\r\n          >\r\n            True\r\n          </button>\r\n          <button\r\n            id=\"land_success\"\r\n            value=\"false\"\r\n            onClick={(e) => updateFilter(\"land_success\", e.target.value)}\r\n          >\r\n            False\r\n          </button>\r\n          </div>\r\n        </div>\r\n      </aside>\r\n      <div id=\"apidata\">\r\n        {apiData.map((flight) => (\r\n          <div id=\"flightdata\">\r\n              <div id=\"image\">\r\n            <img src={flight.links.mission_patch_small} alt=\"Picture cannot be displayed LOLWA\" />\r\n            </div>\r\n            <div id=\"flight-data-items\">\r\n                <div id=\"mission-name\">{flight.mission_name} #{flight.flight_number}</div>\r\n            <div class=\"flight-det\">Successful Launch : {flight.launch_success} </div>\r\n            <div class=\"flight-det\">Launch Year : {flight.launch_year}</div>\r\n            <div class=\"flight-det\">Successful Landing : {flight.rocket.first_stage.cores[0].land_success}</div>\r\n            \r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n    </Fragment>\r\n  );\r\n}\r\n"],"sourceRoot":""}